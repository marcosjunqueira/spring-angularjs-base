<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>br.com.valecard</groupId>
    <artifactId>valecard-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Valecard</name>
    <modules>
        <module>test-api</module>
        <module>core</module>
        <module>valecard</module>
        <module>blockauto</module>
        <module>dentalshow</module>
        <module>rest-api</module>
    </modules>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <main.basedir>${project.basedir}</main.basedir>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.spring.platform</groupId>
                <artifactId>platform-bom</artifactId>
                <version>1.0.1.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <!--javaee 7-->
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-web-api</artifactId>
            <version>7.0</version>
            <scope>provided</scope>
        </dependency>
        <!-- Spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
        </dependency>
        <!-- JSR 303 with Hibernate Validator -->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!-- Apache Tiles -->
        <dependency>
            <groupId>org.apache.tiles</groupId>
            <artifactId>tiles-jsp</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.tiles</groupId>
            <artifactId>tiles-el</artifactId>
        </dependency>

        <!-- @Inject -->
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
        </dependency>
        
        <!--Jackson Mapper-->
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <type>jar</type>
        </dependency>
        
        <!--Commons-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <type>jar</type>
        </dependency>
        
        <!--Spring Data-->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-commons</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-rest-webmvc</artifactId>
        </dependency>
        
        <!--Spring Security-->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-taglibs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
        </dependency>
        
        <!--Hibernate-->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
        </dependency>
        
        <!--Query DSL-->
        <dependency>
            <groupId>com.mysema.querydsl</groupId>
            <artifactId>querydsl-apt</artifactId>
            <scope>provided</scope>
        </dependency>
        
        <!--Mail-->
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>javax.mail-api</artifactId>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>javax.mail</artifactId>
        </dependency>
        
        <!--DB Driver-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        
        <!--Test-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <configuration>
                    <configLocation>config/sun_checks.xml</configLocation>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
    <build>
        <pluginManagement>
            <plugins>
                <!-- to eclipse:eclipse -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-eclipse-plugin</artifactId>
                    <version>2.9</version>
                    <configuration>
                        <additionalBuildcommands>
                            <buildcommand>com.atlassw.tools.eclipse.checkstyle.CheckstyleBuilder</buildcommand>
                            <buildcommand>net.sf.eclipsecs.core.CheckstyleBuilder</buildcommand>
                        </additionalBuildcommands>
                        <additionalProjectnatures>
                            <projectnature>com.atlassw.tools.eclipse.checkstyle.CheckstyleNature</projectnature>
                            <projectnature>net.sf.eclipsecs.core.CheckstyleNature</projectnature>
                        </additionalProjectnatures>
                        <additionalConfig>
                            <file>
                                <name>.checkstyle</name>
                                <content>
                                    <![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<fileset-config file-format-version="1.2.0" simple-config="true" sync-formatter="false">
	<local-check-config name="algarcrm-checkstyle" location="/build-tools/src/main/resources/config/checkstyle.xml" type="project" description="">
		<additional-data name="protect-config-file" value="false" />
	</local-check-config>
        <local-check-config name="Checkstyle Algar Way" location="http://localhost:9000/profiles/export?format=checkstyle&amp;language=java&amp;name=Sonar%2520way" type="remote" description="">
                <additional-data name="cache-file" value="false" />
        </local-check-config>
	<fileset name="all" enabled="true" check-config-name="Checkstyle Algar Way" local="true">
		<file-match-pattern match-pattern="." include-pattern="true" />
	</fileset>
	<filter name="NonSrcDirs" enabled="true" />
</fileset-config>]]>
                                </content>
                            </file>
                            <file>
                                <name>.settings/org.eclipse.core.resources.prefs</name>
                                <content><![CDATA[eclipse.preferences.version=1${line.separator}encoding/<project>=${project.build.sourceEncoding}${line.separator}]]></content>
                            </file>
                            <file>
                                <name>.settings/org.eclipse.jdt.ui.prefs</name>
                                <content><![CDATA[eclipse.preferences.version=1${line.separator}formatter_profile=_JavaFormatter${line.separator}formatter_settings_version=12]]></content>
                            </file>
                            <file>
                                <name>.settings/org.eclipse.jdt.ui.prefs</name>
                                <content><![CDATA[eclipse.preferences.version=1${line.separator}org.eclipse.jdt.core.formatter.align_type_members_on_columns=false${line.separator}org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16${line.separator}org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation=0${line.separator}org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16${line.separator}org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16${line.separator}org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16${line.separator}org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16${line.separator}org.eclipse.jdt.core.formatter.alignment_for_assignment=0${line.separator}org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16${line.separator}org.eclipse.jdt.core.formatter.alignment_for_compact_if=16${line.separator}org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80${line.separator}org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0${line.separator}org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16${line.separator}org.eclipse.jdt.core.formatter.alignment_for_method_declaration=0${line.separator}org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16${line.separator}org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16${line.separator}org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16${line.separator}org.eclipse.jdt.core.formatter.alignment_for_resources_in_try=80${line.separator}org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16${line.separator}org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16${line.separator}org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16${line.separator}org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16${line.separator}org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16${line.separator}org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16${line.separator}org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch=16${line.separator}org.eclipse.jdt.core.formatter.blank_lines_after_imports=1${line.separator}org.eclipse.jdt.core.formatter.blank_lines_after_package=1${line.separator}org.eclipse.jdt.core.formatter.blank_lines_before_field=0${line.separator}org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0${line.separator}org.eclipse.jdt.core.formatter.blank_lines_before_imports=1${line.separator}org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1${line.separator}org.eclipse.jdt.core.formatter.blank_lines_before_method=1${line.separator}org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1${line.separator}org.eclipse.jdt.core.formatter.blank_lines_before_package=0${line.separator}org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1${line.separator}org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1${line.separator}org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line${line.separator}org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line${line.separator}org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line${line.separator}org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line${line.separator}org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line${line.separator}org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line${line.separator}org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line${line.separator}org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line${line.separator}org.eclipse.jdt.core.formatter.brace_position_for_lambda_body=end_of_line${line.separator}org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line${line.separator}org.eclipse.jdt.core.formatter.brace_position_for_switch=end_of_line${line.separator}org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line${line.separator}org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false${line.separator}org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false${line.separator}org.eclipse.jdt.core.formatter.comment.format_block_comments=true${line.separator}org.eclipse.jdt.core.formatter.comment.format_header=false${line.separator}org.eclipse.jdt.core.formatter.comment.format_html=true${line.separator}org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=true${line.separator}org.eclipse.jdt.core.formatter.comment.format_line_comments=true${line.separator}org.eclipse.jdt.core.formatter.comment.format_source_code=true${line.separator}org.eclipse.jdt.core.formatter.comment.indent_parameter_description=true${line.separator}org.eclipse.jdt.core.formatter.comment.indent_root_tags=true${line.separator}org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=insert${line.separator}org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=insert${line.separator}org.eclipse.jdt.core.formatter.comment.line_length=80${line.separator}org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries=true${line.separator}org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries=true${line.separator}org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments=false${line.separator}org.eclipse.jdt.core.formatter.compact_else_if=true${line.separator}org.eclipse.jdt.core.formatter.continuation_indentation=2${line.separator}org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=2${line.separator}org.eclipse.jdt.core.formatter.disabling_tag=@formatter\:off${line.separator}org.eclipse.jdt.core.formatter.enabling_tag=@formatter\:on${line.separator}org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false${line.separator}org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column=true${line.separator}org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true${line.separator}org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true${line.separator}org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true${line.separator}org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true${line.separator}org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true${line.separator}org.eclipse.jdt.core.formatter.indent_empty_lines=false${line.separator}org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true${line.separator}org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true${line.separator}org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true${line.separator}org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=false${line.separator}org.eclipse.jdt.core.formatter.indentation.size=4${line.separator}org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=insert${line.separator}org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert${line.separator}org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert${line.separator}org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert${line.separator}org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert${line.separator}org.eclipse.jdt.core.formatter.insert_new_line_after_label=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert${line.separator}org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=insert${line.separator}org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert${line.separator}org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert${line.separator}org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert${line.separator}org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert${line.separator}org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert${line.separator}org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert${line.separator}org.eclipse.jdt.core.formatter.join_lines_in_comments=true${line.separator}org.eclipse.jdt.core.formatter.join_wrapped_lines=true${line.separator}org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false${line.separator}org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false${line.separator}org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=false${line.separator}org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false${line.separator}org.eclipse.jdt.core.formatter.lineSplit=80${line.separator}org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=false${line.separator}org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=false${line.separator}org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0${line.separator}org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1${line.separator}org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=true${line.separator}org.eclipse.jdt.core.formatter.tabulation.char=mixed${line.separator}org.eclipse.jdt.core.formatter.tabulation.size=8${line.separator}org.eclipse.jdt.core.formatter.use_on_off_tags=false${line.separator}org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=true${line.separator}org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true${line.separator}org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch=true${line.separator}org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested=true${line.separator}]]></content>
                            </file>
                        </additionalConfig>
                    </configuration>
                </plugin>
                <!--formatter -->
                <plugin>
                    <groupId>com.googlecode.maven-java-formatter-plugin</groupId>
                    <artifactId>maven-java-formatter-plugin</artifactId>
                    <version>0.4</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>format</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <configFile>${main.basedir}/config/formatter.xml</configFile>
                        <lineEnding>CRLF</lineEnding>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>com.googlecode.maven-java-formatter-plugin</groupId>
                <artifactId>maven-java-formatter-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>